{
	"name": "milestone2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "metricsshir",
						"type": "DatasetReference"
					},
					"name": "metricsshir"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ODScases",
						"type": "DatasetReference"
					},
					"name": "case"
				},
				{
					"dataset": {
						"referenceName": "ODSdeaths",
						"type": "DatasetReference"
					},
					"name": "death"
				},
				{
					"dataset": {
						"referenceName": "ODSrecovered",
						"type": "DatasetReference"
					},
					"name": "recovered"
				}
			],
			"transformations": [
				{
					"name": "cases"
				},
				{
					"name": "union1"
				},
				{
					"name": "deaths"
				},
				{
					"name": "recover"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID as integer,",
				"          Updated as date,",
				"          Confirmed as integer,",
				"          Confirmed_Change as integer,",
				"          Deaths as integer,",
				"          Deaths_Change as integer,",
				"          Recovered as integer,",
				"          Recovered_Change as integer,",
				"          Latitude as decimal(10,5),",
				"          Longitude as decimal(10,5),",
				"          ISO2 as string,",
				"          ISO3 as string,",
				"          Country_Region as string,",
				"          load_time as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> metricsshir",
				"union1 select(mapColumn(",
				"          ID,",
				"          Updated,",
				"          Confirmed,",
				"          Confirmed_Change,",
				"          Latitude,",
				"          Longitude,",
				"          ISO2,",
				"          ISO3,",
				"          Country_Region,",
				"          load_time",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> cases",
				"metricsshir union(byName: true)~> union1",
				"union1 select(mapColumn(",
				"          ID,",
				"          Updated,",
				"          Deaths,",
				"          Deaths_Change,",
				"          Latitude,",
				"          Longitude,",
				"          ISO2,",
				"          ISO3,",
				"          Country_Region,",
				"          load_time",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> deaths",
				"union1 select(mapColumn(",
				"          ID,",
				"          Updated,",
				"          Recovered,",
				"          Recovered_Change,",
				"          Latitude,",
				"          Longitude,",
				"          ISO2,",
				"          ISO3,",
				"          Country_Region,",
				"          load_time",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> recover",
				"cases sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> case",
				"deaths sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> death",
				"recover sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> recovered"
			]
		}
	}
}